---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Setup Storage - PDFManager">
  <div class="min-h-screen bg-gray-50 py-12">
    <div class="max-w-2xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="bg-white shadow rounded-lg p-6">
        <h1 class="text-2xl font-bold text-gray-900 mb-6">Setup Storage Bucket</h1>
        
        <div class="mb-6">
          <p class="text-gray-600">
            This will create the required PDF storage bucket in your Supabase project.
          </p>
        </div>

        <div id="status" class="mb-6">
          <!-- Status messages will appear here -->
        </div>

        <div class="space-y-4">
          <button id="create-bucket" class="w-full bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-md font-medium">
            Create PDF Storage Bucket
          </button>
          
          <button id="check-status" class="w-full bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-md font-medium">
            Check Current Status
          </button>

          <a href="/supabase-check" class="block w-full text-center bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md font-medium">
            Run Full Configuration Check
          </a>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', async () => {
    const { createStorageBucket } = await import('../lib/setup-storage');
    const { supabase } = await import('../lib/supabase');
    
    const statusEl = document.getElementById('status');
    const createBtn = document.getElementById('create-bucket');
    const checkBtn = document.getElementById('check-status');

    function showStatus(message, type = 'info') {
      if (!statusEl) return;
      
      const colors = {
        success: 'bg-green-50 border-green-200 text-green-800',
        error: 'bg-red-50 border-red-200 text-red-800',
        info: 'bg-blue-50 border-blue-200 text-blue-800',
        warning: 'bg-yellow-50 border-yellow-200 text-yellow-800'
      };

      statusEl.innerHTML = `
        <div class="border rounded-lg p-4 ${colors[type]}">
          <p>${message}</p>
        </div>
      `;
    }

    async function checkBucketStatus() {
      showStatus('Checking bucket status...', 'info');
      
      try {
        const { data: buckets, error } = await supabase.storage.listBuckets();
        
        if (error) {
          showStatus(`Error checking buckets: ${error.message}`, 'error');
          return;
        }

        const pdfBucket = buckets?.find(bucket => bucket.name === 'pdfs');
        
        if (pdfBucket) {
          showStatus('✅ PDF storage bucket exists and is ready to use!', 'success');
        } else {
          showStatus('❌ PDF storage bucket not found. Click "Create PDF Storage Bucket" to create it.', 'warning');
        }
      } catch (error) {
        showStatus(`Unexpected error: ${error.message}`, 'error');
      }
    }

    createBtn?.addEventListener('click', async () => {
      showStatus('Creating storage bucket...', 'info');
      createBtn.disabled = true;
      createBtn.textContent = 'Creating...';

      try {
        const result = await createStorageBucket();
        
        if (result.success) {
          showStatus('✅ PDF storage bucket created successfully!', 'success');
        } else {
          showStatus(`❌ Failed to create bucket: ${result.error}`, 'error');
        }
      } catch (error) {
        showStatus(`❌ Unexpected error: ${error.message}`, 'error');
      } finally {
        createBtn.disabled = false;
        createBtn.textContent = 'Create PDF Storage Bucket';
      }
    });

    checkBtn?.addEventListener('click', checkBucketStatus);

    // Check status on page load
    await checkBucketStatus();
  });
</script>